[{"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\index.js":"1","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\App.js":"2","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\LoginPage\\Login.jsx":"4","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\RegisterPage\\Register.jsx":"5","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\store\\authenticationSlice.js":"6","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\HomePage\\Driver.jsx":"7","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\HomePage\\Admin.jsx":"8","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\HomePage\\User.jsx":"9","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\store\\index.js":"10","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\store\\userSlice.js":"11","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\store\\driverSlice.js":"12","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\store\\adminSlice.js":"13","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\AdminScreens\\AddProduct.jsx":"14","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\AdminScreens\\AddCategory.jsx":"15","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\AdminScreens\\AddDriver.jsx":"16","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\AdminScreens\\driverScreen.jsx":"17","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\AdminScreens\\categoriesScreen.jsx":"18","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\AdminScreens\\productsScreen.jsx":"19","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\UserScreens\\cart.jsx":"20","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\UserScreens\\Address.jsx":"21","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\UserScreens\\Allorders.jsx":"22"},{"size":649,"mtime":1654580953726,"results":"23","hashOfConfig":"24"},{"size":2123,"mtime":1655440616184,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1654500044280,"results":"26","hashOfConfig":"24"},{"size":2367,"mtime":1654600407238,"results":"27","hashOfConfig":"24"},{"size":4662,"mtime":1654600382671,"results":"28","hashOfConfig":"24"},{"size":4903,"mtime":1655375752457,"results":"29","hashOfConfig":"24"},{"size":2929,"mtime":1655468805603,"results":"30","hashOfConfig":"24"},{"size":1661,"mtime":1655273323098,"results":"31","hashOfConfig":"24"},{"size":8032,"mtime":1655273165626,"results":"32","hashOfConfig":"24"},{"size":419,"mtime":1654580993971,"results":"33","hashOfConfig":"24"},{"size":5867,"mtime":1655444714400,"results":"34","hashOfConfig":"24"},{"size":1140,"mtime":1655467480532,"results":"35","hashOfConfig":"24"},{"size":4807,"mtime":1655375744697,"results":"36","hashOfConfig":"24"},{"size":3351,"mtime":1654679643126,"results":"37","hashOfConfig":"24"},{"size":1615,"mtime":1654669115920,"results":"38","hashOfConfig":"24"},{"size":3738,"mtime":1654763312840,"results":"39","hashOfConfig":"24"},{"size":1500,"mtime":1654675552761,"results":"40","hashOfConfig":"24"},{"size":1260,"mtime":1654676253916,"results":"41","hashOfConfig":"24"},{"size":2317,"mtime":1654827124742,"results":"42","hashOfConfig":"24"},{"size":2804,"mtime":1655337945912,"results":"43","hashOfConfig":"24"},{"size":3346,"mtime":1655468695676,"results":"44","hashOfConfig":"24"},{"size":2491,"mtime":1655446498142,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"yajdg4",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"49"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"49"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"49"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"49"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"49"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\index.js",[],[],[],"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\App.js",["123"],[],"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\LoginPage\\Login.jsx",["124","125"],[],"import React,{useRef,useEffect} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport {useFormik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport YupPassword from 'yup-password';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {loginUser} from '../../store/authenticationSlice'\r\n\r\nimport './Login.css'\r\n\r\nYupPassword(yup);\r\n\r\n\r\nexport default function Login(){\r\n\r\n    var emailRef = useRef();\r\n    var passwordRef = useRef();\r\n\r\n    //Yup Validations\r\n    const credentialsValidation = yup.object().shape({\r\n        email:yup.string()\r\n        .required('Email Required')\r\n        .email('Invalid Email'),\r\n\r\n        password:yup.string()\r\n        .required('Password Required')\r\n        .min(5,'Minimum Lenght:5')\r\n        .max(15,'Maximum Lenght:15')\r\n    })\r\n\r\n\r\n    //Dispatch\r\n    const dispatch = useDispatch();\r\n\r\n    var formik = useFormik({\r\n        initialValues:{\r\n            email:'',\r\n            password:''\r\n        },\r\n        \r\n        validationSchema:credentialsValidation,\r\n\r\n        onSubmit:(values)=>{\r\n            dispatch(loginUser(values))\r\n        }\r\n    })\r\n\r\n    // function loginuser(values){\r\n    //     console.log(\"Hey Bruh!!!\",values);\r\n    // }\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"loginGlobalDiv\">\r\n            <h1 className=\"heading\">Ecommerce Application</h1>\r\n        <div className=\"loginFormDiv\">\r\n            <h2>LOGIN</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <input type=\"text\" placeholder=\"Enter email\" className=\"formInput\" name=\"email\" {...formik.getFieldProps('email')}  required ref={emailRef}/>\r\n                {formik.touched.email && formik.errors.email ? <div className=\"errors\">{formik.errors.email}</div>:null}\r\n                <br/>\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"formInput\" {...formik.getFieldProps('password')}  required ref={passwordRef}/>\r\n                {formik.touched.password && formik.errors.password ? <div className=\"errors\">{formik.errors.password}</div>:null}\r\n\r\n                <br/>\r\n                <button type=\"submit\" className=\"btn\">Login</button>\r\n\r\n                <div className=\"toggleLogin\">\r\n                    New User, <Link to='/register'>Register</Link> Here\r\n                </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\RegisterPage\\Register.jsx",["126","127"],[],"import React,{useRef,useEffect}from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {useFormik} from 'formik'\r\nimport * as yup from 'yup'\r\nimport YupPassword from 'yup-password'\r\nimport {getData,registerUser} from '../../store/authenticationSlice';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport '../LoginPage/Login.css'\r\n\r\n\r\nYupPassword(yup);\r\n\r\n\r\nexport default function Register(){\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const emails = [];\r\n\r\n    const users = useSelector((state)=>state.authentic.users);\r\n\r\n\r\n    users.map((user)=>{\r\n        emails.push(user.email)\r\n    })\r\n\r\n    var usernameRef = useRef();\r\n    var emailRef = useRef();\r\n    var phonenumberRef = useRef();\r\n    var passwordRef = useRef();\r\n    var cpasswordRef = useRef();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getData())\r\n    },[])\r\n\r\n    const credentialsValidation = yup.object().shape({\r\n        username:yup.string()\r\n        .required('Username Required')\r\n        .min(5,'Minimum Length 5')\r\n        .max(12,'Maximum Length 12'),\r\n\r\n        email:yup.string()\r\n        .required('Email Required')\r\n        .email('Invalid Email')\r\n        .notOneOf(emails,'Email Already Registered'),\r\n\r\n        password:yup.string()\r\n        .required('Password Required')\r\n        .min(5,'Minimum 5 atleast 1 capital')\r\n        .max(15,'Maximum 15')\r\n        .minUppercase(1,'1 Capital Letter'),\r\n\r\n        confirmpassword:yup.string()\r\n        .required(' Confirm Password Required')\r\n        .oneOf([yup.ref('password'),null],'password and confirm passwords is not same'),\r\n\r\n        phonenumber:yup.string()\r\n        .required('phone number rrequired')\r\n        .min(10,'Not a Valid Phone number')\r\n        .max(10,'Not a Valid Phone number')\r\n        .matches(/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,'Not a valid phonne number'),\r\n\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            username:'',\r\n            email:'',\r\n            phonenumber:'',\r\n            password:'',\r\n            confirmpassword:''\r\n        },\r\n        validationSchema:credentialsValidation,\r\n        onSubmit:(values)=>{\r\n            const newUser = {\r\n                name:values.username,\r\n                email:values.email,\r\n                phonenumber:values.phonenumber,\r\n                password:values.password,\r\n                role_id:3\r\n            }\r\n\r\n            dispatch(registerUser(newUser))\r\n        }\r\n    })\r\n\r\n    // function registerUser(values){\r\n    //     console.log(\"Hey Register\",values);\r\n    // }\r\n\r\n    return(\r\n        <div className='loginGlobalDiv'>\r\n            <h1 className='heading'>Ecommerce Application</h1>\r\n        <div className='loginFormDiv'>\r\n            <h2>REGISTER</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n            <input type=\"text\"  placeholder=\"Enter Username\" className=\"formInput\" {...formik.getFieldProps('username')} required ref={usernameRef}/>    \r\n            {formik.touched.username&&formik.errors.username?<div className=\"errors\">{formik.errors.username}</div>:null}\r\n            <br/>\r\n                \r\n            <input type=\"email\"  placeholder=\"Enter Mail\" className=\"formInput\" {...formik.getFieldProps('email')} required ref={emailRef}/>  \r\n            {formik.touched.email&&formik.errors.email?<div className=\"errors\">{formik.errors.email}</div>:null}\r\n            <br/>\r\n                \r\n            <input type=\"number\"   placeholder=\"Enter Phone Numer\" className=\"formInput\" {...formik.getFieldProps('phonenumber')} required ref={phonenumberRef}/>  \r\n            {formik.touched.phonenumber&&formik.errors.phonenumber?<div className=\"errors\">{formik.errors.phonenumber}</div>:null}\r\n            <br/>\r\n\r\n            <input type=\"password\"    placeholder=\"Password\" className=\"formInput\" {...formik.getFieldProps('password')} ref={passwordRef}/>  \r\n            {formik.touched.password&&formik.errors.password?<div className=\"errors\">{formik.errors.password}</div>:null}\r\n            <br/>\r\n\r\n            <input type=\"password\"   placeholder=\"Confirm  Password\" className=\"formInput\" {...formik.getFieldProps('confirmpassword')} required ref={cpasswordRef} />  \r\n            {formik.touched.confirmpassword&&formik.errors.confirmpassword?<div className=\"errors\">{formik.errors.confirmpassword}</div>:null}\r\n            <br/>\r\n\r\n            <button type='submit' className='btn'>Register</button>\r\n\r\n            <div className='toggleLogin'>\r\n                Existing User, <Link to='/login'>Login</Link> Here\r\n            </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\store\\authenticationSlice.js",[],[],"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\HomePage\\Driver.jsx",["128","129","130","131","132"],[],"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\HomePage\\Admin.jsx",[],[],"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\HomePage\\User.jsx",["133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150"],[],"import React,{useEffect, useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Container ,Card,Row, Col, Button} from 'react-bootstrap';\r\nimport { getAllCategories,getAllProducts } from \"../../store/adminSlice\";\r\nimport { getAllCartProducts,addToCart } from \"../../store/userSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport productimg from '../../product.jpg';\r\nimport { logoutUser } from \"../../store/authenticationSlice\";\r\n\r\n\r\nexport default function User(){\r\n\r\n    const [categoryFilter,setCategoryFilter]=useState(null);\r\n\r\n    const allCategories = useSelector((state)=>state.admin.totalCategories[0])\r\n    const allProducts = useSelector((state)=>state.admin.totalProducts[0])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getAllCategories());\r\n        dispatch(getAllProducts());\r\n    },[])\r\n\r\n    //Handling\r\n\r\n    function handleLogout(){\r\n        window.localStorage.removeItem('token');\r\n        window.localStorage.removeItem('user');\r\n        dispatch(logoutUser);\r\n        window.location.href='/'\r\n    }\r\n\r\n    function handleAddCart(id){\r\n        dispatch(addToCart(id))\r\n    }\r\n\r\n    function handleOrder(prod){\r\n        const product = {\r\n            id:prod.id,\r\n            price:prod.price,\r\n            qunatity:1\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <h1>User's HomePage</h1>\r\n            <button onClick={handleLogout}>Logout</button>\r\n            <br/>\r\n            <Link to=\"/user/cart\">Cart</Link>\r\n\r\n            {/* Category Display */}\r\n            <Container>\r\n                <Row>\r\n                    <select onChange={(e)=>{setCategoryFilter(parseInt(e.target.value))}}>\r\n                        <option>Select Category</option>\r\n                        {\r\n                            allCategories&&allCategories.map((eachCat)=>{\r\n                                return(\r\n                                    <option value={eachCat.id}>{eachCat.category}</option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </select>\r\n\r\n                    <h1>Available Products</h1>\r\n                    {\r\n                        allProducts && allProducts.map((ep,i)=>{\r\n                            if(categoryFilter==null&&ep.available_status==true){\r\n                                console.log(\"filter\",categoryFilter);\r\n                                return(\r\n                                    <Card key={i} style={{width:\"20%\",margin:'10px',display:'inline-block'}}>\r\n                                    <Card.Header><b>{ep.product_name}</b></Card.Header>\r\n                                    <Card.Body>\r\n                                        <center>\r\n                                            <Card.Text>\r\n                                                <img src={productimg} style={{height:\"100px\",width:\"100px\"}} />\r\n                                                <br/>\r\n                                                <b>{ep.price}Rs/-</b>\r\n                                                <br/>\r\n                                                <Button onClick={()=>handleAddCart(ep.id)}>Add To Cart</Button>\r\n                                                <Button onClick={()=>handleOrder(ep)}>Buy Now</Button>\r\n                                            </Card.Text>\r\n                                        </center>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                    {allProducts&&allProducts.filter(prod => prod.category_id==categoryFilter).map((ep,i)=>{\r\n                        console.log(\"filter\",categoryFilter);\r\n\r\n                        if(ep.available_status==true){\r\n                            return(\r\n                                <Card key={i} style={{width:\"20%\",margin:'10px',display:'inline-block'}}>\r\n                                    <Card.Header><b>{ep.product_name}</b></Card.Header>\r\n                                    <Card.Body>\r\n                                        <center>\r\n                                            <Card.Text>\r\n                                                <img src={productimg} style={{height:\"100px\",width:\"100px\"}} />\r\n                                                <br/>\r\n                                                <b>{ep.price}Rs/-</b>\r\n                                                <br/>\r\n                                                <Button>Add To Cart</Button>\r\n                                                <Button>Buy Now</Button>\r\n                                            </Card.Text>\r\n                                        </center>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            )\r\n                            \r\n                        }\r\n                        \r\n                    })}\r\n\r\n                    \r\n                    <h1>Products Out Of Stock</h1>\r\n                    {\r\n                        allProducts && allProducts.map((ep,i)=>{\r\n                            if(categoryFilter==null&&ep.available_status==false){\r\n                                console.log(\"filter\",categoryFilter);\r\n                                return(\r\n                                    <Card key={i} style={{width:\"20%\",margin:'10px',display:'inline-block'}}>\r\n                                    <Card.Header><b>{ep.product_name}</b></Card.Header>\r\n                                    <Card.Body>\r\n                                        <center>\r\n                                            <Card.Text>\r\n                                                <img src={productimg} style={{height:\"100px\",width:\"100px\"}} />\r\n                                                <br/>\r\n                                                <b>{ep.price}Rs/-</b>\r\n                                                <br/>\r\n                                                {/* <Button>Add To Cart</Button>\r\n                                                <Button>Buy Now</Button> */}\r\n                                            </Card.Text>\r\n                                        </center>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                    {allProducts&&allProducts.filter(prod => prod.category_id==categoryFilter).map((ep,i)=>{\r\n                        console.log(\"filter\",categoryFilter);\r\n\r\n                        if(ep.available_status==false){\r\n                            return(\r\n                                <Card key={i} style={{width:\"20%\",margin:'10px',display:'inline-block'}}>\r\n                                    <Card.Header><b>{ep.product_name}</b></Card.Header>\r\n                                    <Card.Body>\r\n                                        <center>\r\n                                            <Card.Text>\r\n                                                <img src={productimg} style={{height:\"100px\",width:\"100px\"}} />\r\n                                                <br/>\r\n                                                <b>{ep.price}Rs/-</b>\r\n                                                <br/>\r\n                                                {/* <Button>Add To Cart</Button>\r\n                                                <Button>Buy Now</Button> */}\r\n                                            </Card.Text>\r\n                                        </center>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            )\r\n                            \r\n                        }\r\n                        \r\n                    })}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\store\\index.js",[],[],"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\store\\userSlice.js",[],[],"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\store\\driverSlice.js",[],[],"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\store\\adminSlice.js",[],[],"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\AdminScreens\\AddProduct.jsx",["151","152"],[],"import React,{useRef,useEffect} from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from 'yup';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { addProduct,getAllCategories} from \"../../store/adminSlice\";\r\n\r\n\r\nexport default function AddProduct(){\r\n\r\n    const allCategories = useSelector((state)=>state.admin.totalCategories[0]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getAllCategories())\r\n    },[])\r\n\r\n    const productValidation = yup.object().shape({\r\n        product_name:yup.string()\r\n        .required(\"Product Name\")\r\n        .min(4,\"Min Length 4\"),\r\n        price:yup.string()\r\n        .required(\"Enter Price\")\r\n        .min(2,\"Enter >10\"),\r\n        image:yup.string()\r\n        .required(\"Image Required\"),\r\n        category_id:yup.string()\r\n        .required(\"Please Select Category\")\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            product_name:'',\r\n            price:'',\r\n            image:'',\r\n            category_id:'',\r\n            avialable_status:true\r\n        },\r\n        validationSchema:productValidation,\r\n        onSubmit:(values)=>{\r\n            const newProduct={\r\n                product_name:values.product_name,\r\n                price:values.price,\r\n                image:values.image,\r\n                category_id:parseInt(values.category_id),\r\n                available_status:true\r\n\r\n            }\r\n\r\n            console.log(\"NEw Product\",newProduct);\r\n            dispatch(addProduct(newProduct));\r\n        }\r\n    })\r\n\r\n    var productRef = useRef();\r\n    var priceRef = useRef();\r\n    var imageRef = useRef();\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>This is Add Product Section</h1>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <input type=\"text\" placeholder=\"Product Name\" {...formik.getFieldProps('product_name')} ref={productRef} required />\r\n                {formik.touched.product_name&&formik.errors.product_name?<div className=\"errors\">{formik.product_name.errors}</div>:null}\r\n                <br/>\r\n                <input type=\"number\" placeholder=\"Enter Price\" {...formik.getFieldProps('price')} ref={priceRef} required/>\r\n                {formik.touched.price&&formik.errors.price?<div className=\"errors\">{formik.price.errors}</div>:null}\r\n                <br/>\r\n                <input type=\"text\"  placeholder=\"Image\"  {...formik.getFieldProps('image')} required/>\r\n                {formik.touched.image&&formik.errors.image?<div className=\"errors\">{formik.image.errors}</div>:null}\r\n\r\n                <br/>\r\n                <select {...formik.getFieldProps('category_id')}>\r\n                    <option>Select Category</option>\r\n                    {\r\n                        allCategories&&allCategories.map((eachCate,i)=>{\r\n                            return(\r\n                                <option value={eachCate.id} key={i}>{eachCate.category}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n\r\n                <br/>\r\n                  \r\n                <button type=\"submit\">Add Product</button>\r\n            </form>\r\n\r\n            <div>\r\n                <Link to='/admin/home'>Go To Home</Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\AdminScreens\\AddCategory.jsx",["153","154"],[],"import React,{useRef} from \"react\";\r\nimport { useFormik, validateYupSchema } from \"formik\";\r\nimport * as yup from 'yup'\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { addCategory } from \"../../store/adminSlice\";\r\n\r\n\r\n\r\nexport default function AddCategory(){\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const catValidation = yup.object().shape({\r\n        category:yup.string()\r\n        .required(\"Category Required\")\r\n        .min(4,\"Min Length 4\")\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            category:''\r\n        },\r\n        validationSchema:catValidation,\r\n        onSubmit:(values)=>{\r\n            const newCategory = {\r\n                category:values.category\r\n            }\r\n\r\n            dispatch(addCategory(newCategory))\r\n        }\r\n    })\r\n\r\n    var catRef = useRef();\r\n\r\n    function printing(values){\r\n        console.log(values);\r\n    }\r\n\r\n    return(\r\n        <div className=\"loginGlobalDiv\">\r\n            <h1>This is Add Category Section</h1>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <input type=\"text\" placeholder=\"Enter Category\" name = \"category\" {...formik.getFieldProps('category')} required ref={catRef} />\r\n                {formik.touched.category&&formik.errors.category?<div className=\"errors\">{formik.errors.category}</div>:null}\r\n\r\n                <br/>\r\n\r\n                <button type=\"submit\">Add Category</button>\r\n                <div>\r\n                    <Link to='/admin/home'>Go To Home</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\AdminScreens\\AddDriver.jsx",["155","156"],[],"import React,{useRef,useEffect}from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {useFormik} from 'formik'\r\nimport * as yup from 'yup'\r\nimport YupPassword from 'yup-password'\r\nimport {addDriver} from '../../store/authenticationSlice';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport '../LoginPage/Login.css'\r\n\r\nYupPassword(yup);\r\n\r\n\r\nexport default function AddDriver(){\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const emails = [];\r\n\r\n    const users = useSelector((state)=>state.authentic.users);\r\n\r\n\r\n    users.map((user)=>{\r\n        emails.push(user.email)\r\n    })\r\n\r\n    var usernameRef = useRef();\r\n    var emailRef = useRef();\r\n    var phonenumberRef = useRef();\r\n    var passwordRef = useRef();\r\n\r\n\r\n    const credentialsValidation = yup.object().shape({\r\n        username:yup.string()\r\n        .required('Username Required')\r\n        .min(5,'Minimum Length 5')\r\n        .max(12,'Maximum Length 12'),\r\n\r\n        email:yup.string()\r\n        .required('Email Required')\r\n        .email('Invalid Email')\r\n        .notOneOf(emails,'Email Already Registered'),\r\n\r\n        password:yup.string()\r\n        .required('Password Required')\r\n        .min(5,'Minimum 5 atleast 1 capital')\r\n        .max(15,'Maximum 15')\r\n        .minUppercase(1,'1 Capital Letter'),\r\n\r\n        phonenumber:yup.string()\r\n        .required('phone number rrequired')\r\n        .min(10,'Not a Valid Phone number')\r\n        .max(10,'Not a Valid Phone number')\r\n        .matches(/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,'Not a valid phonne number'),\r\n\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            username:'',\r\n            email:'',\r\n            phonenumber:'',\r\n            password:'',\r\n        },\r\n        validationSchema:credentialsValidation,\r\n        onSubmit:(values)=>{\r\n            const newUser = {\r\n                name:values.username,\r\n                email:values.email,\r\n                phonenumber:values.phonenumber,\r\n                password:values.password,\r\n                role_id:2\r\n            }\r\n\r\n            dispatch(addDriver(newUser))\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div className='loginGlobalDiv'>\r\n        <h1 className='heading'>Ecommerce Application</h1>\r\n    <div className='loginFormDiv'>\r\n        <h2>REGISTER</h2>\r\n        <form onSubmit={formik.handleSubmit}>\r\n        <input type=\"text\"  placeholder=\"Enter Username\" className=\"formInput\" {...formik.getFieldProps('username')} required ref={usernameRef}/>    \r\n        {formik.touched.username&&formik.errors.username?<div className=\"errors\">{formik.errors.username}</div>:null}\r\n        <br/>\r\n            \r\n        <input type=\"email\"  placeholder=\"Enter Mail\" className=\"formInput\" {...formik.getFieldProps('email')} required ref={emailRef}/>  \r\n        {formik.touched.email&&formik.errors.email?<div className=\"errors\">{formik.errors.email}</div>:null}\r\n        <br/>\r\n            \r\n        <input type=\"number\"   placeholder=\"Enter Phone Numer\" className=\"formInput\" {...formik.getFieldProps('phonenumber')} required ref={phonenumberRef}/>  \r\n        {formik.touched.phonenumber&&formik.errors.phonenumber?<div className=\"errors\">{formik.errors.phonenumber}</div>:null}\r\n        <br/>\r\n\r\n        <input type=\"password\"    placeholder=\"Password\" className=\"formInput\" {...formik.getFieldProps('password')} ref={passwordRef}/>  \r\n        {formik.touched.password&&formik.errors.password?<div className=\"errors\">{formik.errors.password}</div>:null}\r\n        <br/>\r\n\r\n        <button type='submit' className='btn'>Add Driver</button>\r\n\r\n        </form>\r\n    </div>\r\n\r\n    <Link to='/admin/home'>Go To Home</Link>\r\n    </div>\r\n    )\r\n}","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\AdminScreens\\driverScreen.jsx",["157","158","159","160"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getDriverData } from \"../../store/adminSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Container ,Card,Row, Col, Button} from 'react-bootstrap';\r\nimport './AdminScreen.css'\r\n\r\n\r\nexport default function DriverScreen(){\r\n\r\n    const drivers = useSelector((state)=>state.admin.totalDrivers[0])\r\n\r\n    // console.log(typeof(drivers))\r\n\r\n    \r\n    // const driversNames = [];\r\n\r\n    const dispatch = useDispatch();\r\n\r\n   useEffect(()=>{\r\n       dispatch(getDriverData())\r\n   },[dispatch]);\r\n\r\n   console.log(\"D:;\",drivers)\r\n   \r\n\r\n    return(\r\n        <div>\r\n            \r\n            <h1>Displaying All Drivers</h1>\r\n            <Link to=\"/admin/addDriver\">Add Driver</Link>\r\n            <div>\r\n                {drivers&&drivers.map((ed,i)=>(\r\n                   <Card key={i} className=\"driverCard\">\r\n                       <Card.Header>Driver ID: {ed.id}</Card.Header>\r\n                       <Card.Body>\r\n                           <Card.Title>{ed.name}</Card.Title>\r\n                           <Card.Text>\r\n                               Mail Id: <b>{ed.email}</b>\r\n                               <br/>\r\n                               Phone Number: <b>{ed.phonenumber}</b>\r\n                           </Card.Text>\r\n                       </Card.Body>\r\n                   </Card>\r\n                ))}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\AdminScreens\\categoriesScreen.jsx",["161","162","163","164","165"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAllCategories } from \"../../store/adminSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Container ,Card,Row, Col, Button} from 'react-bootstrap';\r\nimport './AdminScreen.css'\r\n\r\nexport default function CategoriesScreen(){\r\n\r\n    const allCategories = useSelector((state)=>state.admin.totalCategories[0])\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        dispatch(getAllCategories())\r\n    },[])\r\n    console.log(\"Categs::\",allCategories);\r\n    return(\r\n        <div>\r\n            <h1>Displaying All Categories</h1>\r\n\r\n            <Link to=\"/admin/addCategory\">Add Category</Link>\r\n\r\n            <br/>\r\n            {allCategories&&allCategories.map((ec,i)=>(\r\n                   <Card key={i} className=\"driverCard\">\r\n                       <Card.Header>Category ID: {ec.id}</Card.Header>\r\n                       <Card.Body>\r\n                           <Card.Title>{ec.category}</Card.Title>\r\n                       </Card.Body>\r\n                   </Card>\r\n                ))}\r\n\r\n                <br/>\r\n\r\n                <Link to='/admin/home'>Go To Home</Link>\r\n            \r\n        </div>\r\n    )\r\n}","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\AdminScreens\\productsScreen.jsx",["166","167","168","169"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAllProducts,productEnable,productDisable} from \"../../store/adminSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Container ,Card,Row, Col, Button} from 'react-bootstrap';\r\nimport productimg from '../../product.jpg';\r\nexport default function ProductsScreen(){\r\n\r\n    const allProducts = useSelector((state)=>state.admin.totalProducts[0])\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        dispatch(getAllProducts())\r\n    },[])\r\n    console.log(\"Prods::\",allProducts);\r\n\r\n    function handleProductStatus(prod){\r\n        console.log(\"HandleProd::\",prod)\r\n        if(prod.available_status==true){\r\n            dispatch(productDisable(prod))\r\n        }\r\n        else{\r\n            dispatch(productEnable(prod))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"loginGlobalDiv\">\r\n            <h1 >Displaying All Products</h1>\r\n\r\n            <Link to=\"/admin/addProduct\">Add Product</Link>\r\n\r\n            <br/>\r\n            <Container className='p-4'>\r\n                <Row>\r\n                    {allProducts&&allProducts.map((ep,i)=>(\r\n                        <Card key={i} style={{width:\"20%\",margin:'10px',display:'inline-block'}}>\r\n                            <Card.Header><b>{ep.product_name}</b></Card.Header>\r\n                            <Card.Body>\r\n                                <center>\r\n                                    <Card.Text>\r\n                                        <img src={productimg} style={{height:\"100px\",width:\"100px\"}} />\r\n                                        <br/>\r\n                                        <b>{ep.price}Rs/-</b>\r\n                                        <br/>\r\n                                        <Button onClick={()=>{handleProductStatus(ep)}}>{ep.available_status?\"Disable Product\":\"Enable Product\"}</Button>\r\n                                    </Card.Text>\r\n                                </center>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        ))}\r\n                </Row>\r\n                \r\n            </Container>\r\n\r\n                <br/>\r\n\r\n                <Link to='/admin/home'>Go To Home</Link>\r\n            \r\n        </div>\r\n    )\r\n}","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\UserScreens\\cart.jsx",["170","171"],[],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllCartProducts,decQuantity,incQuantity } from '../../store/userSlice';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport productimg from '../../product.jpg';\r\nimport {Container ,Card,Row, Col, Button} from 'react-bootstrap';\r\n\r\n\r\nexport default function Cart(){\r\n\r\n    const cartProducts = useSelector((state)=>state.user.loadAllCartProducts[0]);\r\n    var payment = 0;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getAllCartProducts())\r\n    },[dispatch])\r\n\r\n    console.log(\"cartProducts\",cartProducts)\r\n\r\n    function handleDecQuantity(id){\r\n        dispatch(decQuantity(id))\r\n    }\r\n    function handleIncQuantity(id){\r\n        dispatch(incQuantity(id))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Cart</h1>\r\n            <Link to=\"/user/home\">Go To Home</Link>\r\n            <Container>\r\n                <Row>\r\n                    {cartProducts&&cartProducts.map((eachcart,i)=>(\r\n                        <Card key={i} style={{width:\"20%\",margin:'10px',display:'inline-block'}}>\r\n                            <Card.Header><b><center>{eachcart.product.product_name}</center></b></Card.Header>\r\n                            <Card.Body>\r\n                                <center>\r\n                                    <Card.Text>\r\n                                        <img src={productimg} alt=\"ImageHere\" style={{height:\"100px\",width:\"100px\"}}/>\r\n                                        <br/>\r\n                                        Price: <b>{eachcart.product.price}</b>\r\n                                        <br/>\r\n                                        <br/>\r\n                                        Quantitiy:\r\n                                        <button onClick={()=>handleDecQuantity(eachcart.id)}>-</button>\r\n                                        <b>{eachcart.quantity}</b>\r\n                                        <button onClick={()=>handleIncQuantity(eachcart.id)}>+</button>\r\n                                        <br/>\r\n                                        Payment: <b>{eachcart.product.price*eachcart.quantity}</b>\r\n                                    </Card.Text>\r\n                                </center>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    ))}\r\n                </Row>\r\n                {/* {cartProducts&&cartProducts.map((eachcart,i)=>{\r\n                    var pricehere =  eachcart.product.price * eachcart.quantity\r\n                }\r\n                payment = payment+pricehere\r\n                )} */}\r\n                <Button><Link to=\"/user/address\">Place Order</Link></Button>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\UserScreens\\Address.jsx",["172","173","174","175"],[],"C:\\Users\\surya\\OneDrive\\Desktop\\Ecommerce Application\\frontend\\src\\components\\UserScreens\\Allorders.jsx",["176","177","178"],[],{"ruleId":"179","severity":1,"message":"180","line":2,"column":23,"nodeType":"181","messageId":"182","endLine":2,"endColumn":27},{"ruleId":"179","severity":1,"message":"183","line":1,"column":22,"nodeType":"181","messageId":"182","endLine":1,"endColumn":31},{"ruleId":"179","severity":1,"message":"184","line":6,"column":22,"nodeType":"181","messageId":"182","endLine":6,"endColumn":33},{"ruleId":"185","severity":1,"message":"186","line":23,"column":21,"nodeType":"187","messageId":"188","endLine":23,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":35,"column":7,"nodeType":"191","endLine":35,"endColumn":9,"suggestions":"192"},{"ruleId":"179","severity":1,"message":"193","line":2,"column":30,"nodeType":"181","messageId":"182","endLine":2,"endColumn":33},{"ruleId":"179","severity":1,"message":"194","line":2,"column":35,"nodeType":"181","messageId":"182","endLine":2,"endColumn":41},{"ruleId":"179","severity":1,"message":"195","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":18},{"ruleId":"179","severity":1,"message":"196","line":13,"column":11,"nodeType":"181","messageId":"182","endLine":13,"endColumn":21},{"ruleId":"179","severity":1,"message":"197","line":14,"column":11,"nodeType":"181","messageId":"182","endLine":14,"endColumn":20},{"ruleId":"179","severity":1,"message":"193","line":3,"column":30,"nodeType":"181","messageId":"182","endLine":3,"endColumn":33},{"ruleId":"179","severity":1,"message":"198","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":28},{"ruleId":"189","severity":1,"message":"190","line":23,"column":7,"nodeType":"191","endLine":23,"endColumn":9,"suggestions":"199"},{"ruleId":"179","severity":1,"message":"200","line":39,"column":15,"nodeType":"181","messageId":"182","endLine":39,"endColumn":22},{"ruleId":"185","severity":1,"message":"201","line":71,"column":62,"nodeType":"187","messageId":"202","endLine":71,"endColumn":64},{"ruleId":"203","severity":1,"message":"204","line":72,"column":73,"nodeType":"205","messageId":"206","endLine":72,"endColumn":75},{"ruleId":"207","severity":1,"message":"208","line":80,"column":49,"nodeType":"209","endLine":80,"endColumn":112},{"ruleId":"203","severity":1,"message":"204","line":94,"column":78,"nodeType":"205","messageId":"206","endLine":94,"endColumn":80},{"ruleId":"185","severity":1,"message":"201","line":94,"column":106,"nodeType":"187","messageId":"202","endLine":94,"endColumn":108},{"ruleId":"203","severity":1,"message":"204","line":97,"column":47,"nodeType":"205","messageId":"206","endLine":97,"endColumn":49},{"ruleId":"207","severity":1,"message":"208","line":104,"column":49,"nodeType":"209","endLine":104,"endColumn":112},{"ruleId":"185","severity":1,"message":"201","line":123,"column":62,"nodeType":"187","messageId":"202","endLine":123,"endColumn":64},{"ruleId":"203","severity":1,"message":"204","line":124,"column":73,"nodeType":"205","messageId":"206","endLine":124,"endColumn":75},{"ruleId":"207","severity":1,"message":"208","line":132,"column":49,"nodeType":"209","endLine":132,"endColumn":112},{"ruleId":"203","severity":1,"message":"204","line":146,"column":78,"nodeType":"205","messageId":"206","endLine":146,"endColumn":80},{"ruleId":"185","severity":1,"message":"201","line":146,"column":106,"nodeType":"187","messageId":"202","endLine":146,"endColumn":108},{"ruleId":"203","severity":1,"message":"204","line":149,"column":47,"nodeType":"205","messageId":"206","endLine":149,"endColumn":49},{"ruleId":"207","severity":1,"message":"208","line":156,"column":49,"nodeType":"209","endLine":156,"endColumn":112},{"ruleId":"189","severity":1,"message":"190","line":17,"column":7,"nodeType":"191","endLine":17,"endColumn":9,"suggestions":"210"},{"ruleId":"179","severity":1,"message":"211","line":58,"column":9,"nodeType":"181","messageId":"182","endLine":58,"endColumn":17},{"ruleId":"179","severity":1,"message":"212","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":38},{"ruleId":"179","severity":1,"message":"213","line":37,"column":14,"nodeType":"181","messageId":"182","endLine":37,"endColumn":22},{"ruleId":"179","severity":1,"message":"183","line":1,"column":22,"nodeType":"181","messageId":"182","endLine":1,"endColumn":31},{"ruleId":"185","severity":1,"message":"186","line":22,"column":21,"nodeType":"187","messageId":"188","endLine":22,"endColumn":23},{"ruleId":"179","severity":1,"message":"214","line":6,"column":9,"nodeType":"181","messageId":"182","endLine":6,"endColumn":18},{"ruleId":"179","severity":1,"message":"215","line":6,"column":25,"nodeType":"181","messageId":"182","endLine":6,"endColumn":28},{"ruleId":"179","severity":1,"message":"193","line":6,"column":30,"nodeType":"181","messageId":"182","endLine":6,"endColumn":33},{"ruleId":"179","severity":1,"message":"194","line":6,"column":35,"nodeType":"181","messageId":"182","endLine":6,"endColumn":41},{"ruleId":"179","severity":1,"message":"214","line":6,"column":9,"nodeType":"181","messageId":"182","endLine":6,"endColumn":18},{"ruleId":"179","severity":1,"message":"215","line":6,"column":25,"nodeType":"181","messageId":"182","endLine":6,"endColumn":28},{"ruleId":"179","severity":1,"message":"193","line":6,"column":30,"nodeType":"181","messageId":"182","endLine":6,"endColumn":33},{"ruleId":"179","severity":1,"message":"194","line":6,"column":35,"nodeType":"181","messageId":"182","endLine":6,"endColumn":41},{"ruleId":"189","severity":1,"message":"190","line":16,"column":7,"nodeType":"191","endLine":16,"endColumn":9,"suggestions":"216"},{"ruleId":"179","severity":1,"message":"193","line":6,"column":30,"nodeType":"181","messageId":"182","endLine":6,"endColumn":33},{"ruleId":"189","severity":1,"message":"190","line":15,"column":7,"nodeType":"191","endLine":15,"endColumn":9,"suggestions":"217"},{"ruleId":"203","severity":1,"message":"204","line":20,"column":33,"nodeType":"205","messageId":"206","endLine":20,"endColumn":35},{"ruleId":"207","severity":1,"message":"208","line":43,"column":41,"nodeType":"209","endLine":43,"endColumn":104},{"ruleId":"179","severity":1,"message":"193","line":7,"column":30,"nodeType":"181","messageId":"182","endLine":7,"endColumn":33},{"ruleId":"179","severity":1,"message":"218","line":13,"column":9,"nodeType":"181","messageId":"182","endLine":13,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"179","severity":1,"message":"219","line":19,"column":12,"nodeType":"181","messageId":"182","endLine":19,"endColumn":20},{"ruleId":"179","severity":1,"message":"220","line":19,"column":21,"nodeType":"181","messageId":"182","endLine":19,"endColumn":32},{"ruleId":"179","severity":1,"message":"221","line":22,"column":11,"nodeType":"181","messageId":"182","endLine":22,"endColumn":20},{"ruleId":"179","severity":1,"message":"193","line":4,"column":30,"nodeType":"181","messageId":"182","endLine":4,"endColumn":33},{"ruleId":"179","severity":1,"message":"194","line":4,"column":35,"nodeType":"181","messageId":"182","endLine":4,"endColumn":41},{"ruleId":"189","severity":1,"message":"222","line":16,"column":7,"nodeType":"191","endLine":16,"endColumn":17,"suggestions":"223"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSelector' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["224"],"'Col' is defined but never used.","'Button' is defined but never used.","'productimg' is defined but never used.","'loggedUser' is assigned a value but never used.","'localUser' is assigned a value but never used.","'getAllCartProducts' is defined but never used.",["225"],"'product' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["226"],"'imageRef' is assigned a value but never used.","'validateYupSchema' is defined but never used.","'printing' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.",["227"],["228"],"'payment' is assigned a value but never used.","'ordering' is assigned a value but never used.","'setOrdering' is assigned a value but never used.","'allOrders' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'allOrders'. Either include it or remove the dependency array.",["229"],{"desc":"230","fix":"231"},{"desc":"230","fix":"232"},{"desc":"230","fix":"233"},{"desc":"230","fix":"234"},{"desc":"230","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [dispatch]",{"range":"238","text":"239"},{"range":"240","text":"239"},{"range":"241","text":"239"},{"range":"242","text":"239"},{"range":"243","text":"239"},"Update the dependencies array to be: [allOrders, dispatch]",{"range":"244","text":"245"},[838,840],"[dispatch]",[873,875],[513,515],[550,552],[583,585],[458,468],"[allOrders, dispatch]"]