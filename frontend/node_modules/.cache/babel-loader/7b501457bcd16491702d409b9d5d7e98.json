{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\OneDrive\\\\Desktop\\\\Ecommerce Application\\\\frontend\\\\src\\\\components\\\\AdminScreens\\\\driverScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getDriverData } from \"../../store/adminSlice\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DriverScreen() {\n  _s();\n\n  const drivers = useSelector(state => state.admin.totalDrivers);\n  console.log(typeof drivers);\n  const driversNames = [];\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getDriverData());\n  }, []);\n  drivers.map(eachDriver => {\n    driversNames.push(eachDriver);\n  });\n  console.log(\"D:;\", driversNames);\n  const surya = [{\n    name: 'surya',\n    pass: 'surya123'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Displaying All Drivers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/addDriver\",\n      children: \"Add Driver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"It won't work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: driversNames.map(eD => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: eD.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, eD.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: surya.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: s.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DriverScreen, \"Tw1NV2tXSvhZp3AO98pO+LLSacY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DriverScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverScreen\");","map":{"version":3,"names":["React","Link","getDriverData","useEffect","useDispatch","useSelector","DriverScreen","drivers","state","admin","totalDrivers","console","log","driversNames","dispatch","map","eachDriver","push","surya","name","pass","eD","email","id","s"],"sources":["C:/Users/surya/OneDrive/Desktop/Ecommerce Application/frontend/src/components/AdminScreens/driverScreen.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getDriverData } from \"../../store/adminSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function DriverScreen(){\r\n\r\n    const drivers = useSelector((state)=>state.admin.totalDrivers)\r\n\r\n    console.log(typeof(drivers))\r\n\r\n    \r\n    const driversNames = [];\r\n\r\n    const dispatch = useDispatch();\r\n\r\n   useEffect(()=>{\r\n       dispatch(getDriverData())\r\n   },[]);\r\n\r\n   drivers.map((eachDriver)=>{\r\n       driversNames.push(eachDriver)\r\n   })\r\n\r\n\r\n   console.log(\"D:;\",driversNames)\r\n\r\n   const surya = [{name:'surya',pass:'surya123'}]\r\n\r\n   \r\n\r\n    return(\r\n        <div>\r\n            \r\n            <h1>Displaying All Drivers</h1>\r\n            <Link to=\"/admin/addDriver\">Add Driver</Link>\r\n            <h2>It won't work</h2>\r\n            <div>\r\n                {driversNames.map((eD)=>(\r\n                    <div key={eD.id}>\r\n                        <h3>{eD.email}</h3>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div>\r\n                {surya.map((s)=>(\r\n                    <div>\r\n                        <h3>{s.name}</h3>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,eAAe,SAASC,YAAT,GAAuB;EAAA;;EAElC,MAAMC,OAAO,GAAGF,WAAW,CAAEG,KAAD,IAASA,KAAK,CAACC,KAAN,CAAYC,YAAtB,CAA3B;EAEAC,OAAO,CAACC,GAAR,CAAY,OAAOL,OAAnB;EAGA,MAAMM,YAAY,GAAG,EAArB;EAEA,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;EAEDD,SAAS,CAAC,MAAI;IACVW,QAAQ,CAACZ,aAAa,EAAd,CAAR;EACH,CAFQ,EAEP,EAFO,CAAT;EAIAK,OAAO,CAACQ,GAAR,CAAaC,UAAD,IAAc;IACtBH,YAAY,CAACI,IAAb,CAAkBD,UAAlB;EACH,CAFD;EAKAL,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBC,YAAlB;EAEA,MAAMK,KAAK,GAAG,CAAC;IAACC,IAAI,EAAC,OAAN;IAAcC,IAAI,EAAC;EAAnB,CAAD,CAAd;EAIC,oBACI;IAAA,wBAEI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,IAAD;MAAM,EAAE,EAAC,kBAAT;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,eAKI;MAAA,UACKP,YAAY,CAACE,GAAb,CAAkBM,EAAD,iBACd;QAAA,uBACI;UAAA,UAAKA,EAAE,CAACC;QAAR;UAAA;UAAA;UAAA;QAAA;MADJ,GAAUD,EAAE,CAACE,EAAb;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QALJ,eAYI;MAAA,UACKL,KAAK,CAACH,GAAN,CAAWS,CAAD,iBACP;QAAA,uBACI;UAAA,UAAKA,CAAC,CAACL;QAAP;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH;;GAhDuBb,Y;UAEJD,W,EAOCD,W;;;KATGE,Y"},"metadata":{},"sourceType":"module"}