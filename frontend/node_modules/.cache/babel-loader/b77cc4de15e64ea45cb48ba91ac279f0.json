{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\OneDrive\\\\Desktop\\\\Ecommerce Application\\\\frontend\\\\src\\\\components\\\\RegisterPage\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport YupPassword from 'yup-password';\nimport { getData, registerUser } from '../../store/authenticationSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport '../LoginPage/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nYupPassword(yup);\nexport default function Register() {\n  _s();\n\n  const dispatch = useDispatch();\n  const emails = [];\n  const users = useSelector(state => state.authentic.users);\n  users.map(user => {\n    emails.push(user.email);\n  });\n  var usernameRef = useRef();\n  var emailRef = useRef();\n  var phonenumberRef = useRef();\n  var passwordRef = useRef();\n  var cpasswordRef = useRef();\n  useEffect(() => {\n    dispatch(getData());\n  }, []);\n  const credentialsValidation = yup.object().shape({\n    username: yup.string().required('Username Required').min(5, 'Minimum Length 5').max(12, 'Maximum Length 12'),\n    email: yup.string().required('Email Required').email('Invalid Email').notOneOf(emails, 'Email Already Registered'),\n    password: yup.string().required('Password Required').min(5, 'Minimum 5 atleast 1 capital').max(15, 'Maximum 15').minUppercase(1, '1 Capital Letter'),\n    confirmpassword: yup.string().required(' Confirm Password Required').oneOf([yup.ref('password'), null], 'password and confirm passwords is not same'),\n    phonenumber: yup.string().required('phone number rrequired').min(10, 'Not a Valid Phone number').max(10, 'Not a Valid Phone number').matches(/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/, 'Not a valid phonne number')\n  });\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      phonenumber: '',\n      password: '',\n      confirmpassword: ''\n    },\n    validationSchema: credentialsValidation,\n    onSubmit: values => {\n      const newUser = {\n        name: values.username,\n        email: values.email,\n        phonenumber: values.phonenumber,\n        password: values.password,\n        role_id: 3\n      };\n      dispatch(registerUser(newUser));\n    }\n  }); // function registerUser(values){\n  //     console.log(\"Hey Register\",values);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"globalLoginDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Username\",\n          ...formik.getFieldProps('username'),\n          required: true,\n          ref: usernameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), formik.touched.username && formik.errors.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 62\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter Mail\",\n          ...formik.getFieldProps('email'),\n          required: true,\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 56\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Enter Phone Numer\",\n          ...formik.getFieldProps('phonenumber'),\n          required: true,\n          ref: phonenumberRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), formik.touched.phonenumber && formik.errors.phonenumber ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.phonenumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 68\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          ...formik.getFieldProps('password'),\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 62\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm  Password\",\n          ...formik.getFieldProps('confirmpassword'),\n          required: true,\n          ref: cpasswordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), formik.touched.confirmpassword && formik.errors.confirmpassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.confirmpassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 76\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Existing User, \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 32\n          }, this), \" Here\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"lJbjdHMCnizVnnBk/aObzQHdlHw=\", false, function () {\n  return [useDispatch, useSelector, useFormik];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useRef","useEffect","Link","useFormik","yup","YupPassword","getData","registerUser","useSelector","useDispatch","Register","dispatch","emails","users","state","authentic","map","user","push","email","usernameRef","emailRef","phonenumberRef","passwordRef","cpasswordRef","credentialsValidation","object","shape","username","string","required","min","max","notOneOf","password","minUppercase","confirmpassword","oneOf","ref","phonenumber","matches","formik","initialValues","validationSchema","onSubmit","values","newUser","name","role_id","handleSubmit","getFieldProps","touched","errors"],"sources":["C:/Users/surya/OneDrive/Desktop/Ecommerce Application/frontend/src/components/RegisterPage/Register.jsx"],"sourcesContent":["import React,{useRef,useEffect}from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {useFormik} from 'formik'\r\nimport * as yup from 'yup'\r\nimport YupPassword from 'yup-password'\r\nimport {getData,registerUser} from '../../store/authenticationSlice';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport '../LoginPage/Login.css'\r\n\r\n\r\nYupPassword(yup);\r\n\r\n\r\nexport default function Register(){\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const emails = [];\r\n\r\n    const users = useSelector((state)=>state.authentic.users);\r\n\r\n\r\n    users.map((user)=>{\r\n        emails.push(user.email)\r\n    })\r\n\r\n    var usernameRef = useRef();\r\n    var emailRef = useRef();\r\n    var phonenumberRef = useRef();\r\n    var passwordRef = useRef();\r\n    var cpasswordRef = useRef();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getData())\r\n    },[])\r\n\r\n    const credentialsValidation = yup.object().shape({\r\n        username:yup.string()\r\n        .required('Username Required')\r\n        .min(5,'Minimum Length 5')\r\n        .max(12,'Maximum Length 12'),\r\n\r\n        email:yup.string()\r\n        .required('Email Required')\r\n        .email('Invalid Email')\r\n        .notOneOf(emails,'Email Already Registered'),\r\n\r\n        password:yup.string()\r\n        .required('Password Required')\r\n        .min(5,'Minimum 5 atleast 1 capital')\r\n        .max(15,'Maximum 15')\r\n        .minUppercase(1,'1 Capital Letter'),\r\n\r\n        confirmpassword:yup.string()\r\n        .required(' Confirm Password Required')\r\n        .oneOf([yup.ref('password'),null],'password and confirm passwords is not same'),\r\n\r\n        phonenumber:yup.string()\r\n        .required('phone number rrequired')\r\n        .min(10,'Not a Valid Phone number')\r\n        .max(10,'Not a Valid Phone number')\r\n        .matches(/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,'Not a valid phonne number'),\r\n\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            username:'',\r\n            email:'',\r\n            phonenumber:'',\r\n            password:'',\r\n            confirmpassword:''\r\n        },\r\n        validationSchema:credentialsValidation,\r\n        onSubmit:(values)=>{\r\n            const newUser = {\r\n                name:values.username,\r\n                email:values.email,\r\n                phonenumber:values.phonenumber,\r\n                password:values.password,\r\n                role_id:3\r\n            }\r\n\r\n            dispatch(registerUser(newUser))\r\n        }\r\n    })\r\n\r\n    // function registerUser(values){\r\n    //     console.log(\"Hey Register\",values);\r\n    // }\r\n\r\n    return(\r\n        <div className='globalLoginDiv'>\r\n        <div>\r\n            <h1>Register Page</h1>\r\n            <form onSubmit={formik.handleSubmit}>\r\n            <input type=\"text\"  placeholder=\"Enter Username\" {...formik.getFieldProps('username')} required ref={usernameRef}/>    \r\n            {formik.touched.username&&formik.errors.username?<div>{formik.errors.username}</div>:null}\r\n            <br/>\r\n                \r\n            <input type=\"email\"  placeholder=\"Enter Mail\" {...formik.getFieldProps('email')} required ref={emailRef}/>  \r\n            {formik.touched.email&&formik.errors.email?<div>{formik.errors.email}</div>:null}\r\n            <br/>\r\n                \r\n            <input type=\"number\"   placeholder=\"Enter Phone Numer\" {...formik.getFieldProps('phonenumber')} required ref={phonenumberRef}/>  \r\n            {formik.touched.phonenumber&&formik.errors.phonenumber?<div>{formik.errors.phonenumber}</div>:null}\r\n            <br/>\r\n\r\n            <input type=\"password\"    placeholder=\"Password\" {...formik.getFieldProps('password')} ref={passwordRef}/>  \r\n            {formik.touched.password&&formik.errors.password?<div>{formik.errors.password}</div>:null}\r\n            <br/>\r\n\r\n            <input type=\"password\"   placeholder=\"Confirm  Password\" {...formik.getFieldProps('confirmpassword')} required ref={cpasswordRef} />  \r\n            {formik.touched.confirmpassword&&formik.errors.confirmpassword?<div>{formik.errors.confirmpassword}</div>:null}\r\n            <br/>\r\n\r\n            <button type='submit'>Register</button>\r\n\r\n            <div>\r\n                Existing User, <Link to='/login'>Login</Link> Here\r\n            </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}