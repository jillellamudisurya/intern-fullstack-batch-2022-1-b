{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const adminSlice = createSlice({\n  name: 'admin',\n  initialState: {\n    totalDrivers: []\n  },\n  reducers: {\n    loadDrivers: (state, action) => {\n      state.totalDrivers = [];\n      state.totalDrivers.push(action.payload);\n    }\n  }\n});\nexport function getDriverData() {\n  return dispatch => {\n    fetch('http://localhost:2424/getDrivers').then(res => res.json()).then(data => {\n      dispatch(loadDrivers(data));\n    }).catch(err => console.log(\"Err::\", err));\n  };\n}\nexport function addCategory(newCategory) {\n  return dispatch => {\n    fetch(\"http://localhost:2424/addDriver\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newCategory)\n    }).then(res => {\n      if (res.status === 200) {\n        alert(\"Driver Registered Successfully\");\n      }\n    });\n  };\n}\nexport const {\n  loadDrivers\n} = adminSlice.actions;\nexport default adminSlice.reducer;","map":{"version":3,"names":["createSlice","adminSlice","name","initialState","totalDrivers","reducers","loadDrivers","state","action","push","payload","getDriverData","dispatch","fetch","then","res","json","data","catch","err","console","log","addCategory","newCategory","method","headers","body","JSON","stringify","status","alert","actions","reducer"],"sources":["C:/Users/surya/OneDrive/Desktop/Ecommerce Application/frontend/src/store/adminSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nexport const adminSlice = createSlice({\r\n    name:'admin',\r\n    initialState:{\r\n        totalDrivers:[]\r\n    },\r\n    reducers:{\r\n        loadDrivers:(state,action)=>{\r\n            state.totalDrivers=[];\r\n            state.totalDrivers.push(action.payload);\r\n          }\r\n    }\r\n});\r\n\r\nexport function getDriverData(){\r\n    return ((dispatch)=>{\r\n      fetch('http://localhost:2424/getDrivers')\r\n      .then((res)=>res.json())\r\n      .then((data)=>{\r\n        dispatch(loadDrivers(data))\r\n      }).catch((err)=>console.log(\"Err::\",err))\r\n    })\r\n  }\r\n\r\n  export function addCategory(newCategory){\r\n      return((dispatch)=>{\r\n        fetch(\"http://localhost:2424/addDriver\",{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify(newCategory)\r\n        })\r\n        .then((res)=>{\r\n            if(res.status===200){\r\n                alert(\"Driver Registered Successfully\")\r\n            }\r\n        })\r\n      })\r\n  }\r\n\r\nexport const {loadDrivers}  = adminSlice.actions;\r\nexport default adminSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAClCE,IAAI,EAAC,OAD6B;EAElCC,YAAY,EAAC;IACTC,YAAY,EAAC;EADJ,CAFqB;EAKlCC,QAAQ,EAAC;IACLC,WAAW,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;MACxBD,KAAK,CAACH,YAAN,GAAmB,EAAnB;MACAG,KAAK,CAACH,YAAN,CAAmBK,IAAnB,CAAwBD,MAAM,CAACE,OAA/B;IACD;EAJE;AALyB,CAAD,CAA9B;AAaP,OAAO,SAASC,aAAT,GAAwB;EAC3B,OAASC,QAAD,IAAY;IAClBC,KAAK,CAAC,kCAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAAOA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAQ;MACZL,QAAQ,CAACN,WAAW,CAACW,IAAD,CAAZ,CAAR;IACD,CAJD,EAIGC,KAJH,CAIUC,GAAD,IAAOC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,GAApB,CAJhB;EAKD,CAND;AAOD;AAED,OAAO,SAASG,WAAT,CAAqBC,WAArB,EAAiC;EACpC,OAAQX,QAAD,IAAY;IACjBC,KAAK,CAAC,iCAAD,EAAmC;MACpCW,MAAM,EAAC,MAD6B;MAEpCC,OAAO,EAAC;QACJ,gBAAe;MADX,CAF4B;MAKpCC,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeL,WAAf;IAL+B,CAAnC,CAAL,CAOCT,IAPD,CAOOC,GAAD,IAAO;MACT,IAAGA,GAAG,CAACc,MAAJ,KAAa,GAAhB,EAAoB;QAChBC,KAAK,CAAC,gCAAD,CAAL;MACH;IACJ,CAXD;EAYD,CAbD;AAcH;AAEH,OAAO,MAAM;EAACxB;AAAD,IAAiBL,UAAU,CAAC8B,OAAlC;AACP,eAAe9B,UAAU,CAAC+B,OAA1B"},"metadata":{},"sourceType":"module"}