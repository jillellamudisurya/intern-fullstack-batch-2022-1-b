{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\OneDrive\\\\Desktop\\\\Ecommerce Application\\\\frontend\\\\src\\\\components\\\\RegisterPage\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport YupPassword from 'yup-password';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nYupPassword(yup);\nexport default function Register() {\n  _s();\n\n  const emails = [];\n  var usernameRef = useRef();\n  var emailRef = useRef();\n  var phonenumberRef = useRef();\n  var passwordRef = useRef();\n  var cpasswordRef = useRef();\n  const credentialsValidation = yup.object().shape({\n    username: yup.string().required('Username Required').min(5, 'Minimum Length 5').max(12, 'Maximum Length 12'),\n    email: yup.string().required('Email Required').email('Invalid Email').notOneOf(emails, 'Email Already Registered'),\n    password: yup.string().required('Password Required').min(5, 'Minimum 5 atleast 1 capital').max(15, 'Maximum 15').minUppercase(1, '1 Capital Letter'),\n    confirmpassword: yup.string().required(' Confirm Password Required').oneOf([yup.ref('password'), null], 'password and confirm passwords is not same'),\n    phonenumber: yup.string().required('phone number rrequired').min(10, 'Not a Valid Phone number').max(10, 'Not a Valid Phone number').matches(/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/, 'Not a valid phonne number')\n  });\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      phonenumber: '',\n      password: '',\n      confirmpassword: ''\n    },\n    validationSchema: credentialsValidation,\n    onSubmit: registerUser\n  });\n\n  function registerUser(values) {\n    console.log(\"Hey Register\", values);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Username\",\n        ...formik.getFieldProps('username'),\n        required: true,\n        ref: usernameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), formik.touched.username && formik.errors.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 62\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter Mail\",\n        ...formik.getFieldProps('email'),\n        required: true,\n        ref: emailRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 56\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter Phone Numer\",\n        ...formik.getFieldProps('phonenumber'),\n        required: true,\n        ref: phonenumberRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), formik.touched.phonenumber && formik.errors.phonenumber ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.phonenumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 68\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        ...formik.getFieldProps('password'),\n        ref: passwordRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 62\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm  Password\",\n        ...formik.getFieldProps('confirmpassword'),\n        required: true,\n        ref: cpasswordRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), formik.touched.confirmpassword && formik.errors.confirmpassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.confirmpassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 76\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"OEUM7D/WYM8El0xbLfaDVZcuCd4=\", false, function () {\n  return [useFormik];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useRef","useEffect","Link","useFormik","yup","YupPassword","Register","emails","usernameRef","emailRef","phonenumberRef","passwordRef","cpasswordRef","credentialsValidation","object","shape","username","string","required","min","max","email","notOneOf","password","minUppercase","confirmpassword","oneOf","ref","phonenumber","matches","formik","initialValues","validationSchema","onSubmit","registerUser","values","console","log","handleSubmit","getFieldProps","touched","errors"],"sources":["C:/Users/surya/OneDrive/Desktop/Ecommerce Application/frontend/src/components/RegisterPage/Register.jsx"],"sourcesContent":["import React,{useRef,useEffect}from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {useFormik} from 'formik'\r\nimport * as yup from 'yup'\r\nimport YupPassword from 'yup-password'\r\n\r\nYupPassword(yup);\r\n\r\n\r\nexport default function Register(){\r\n\r\n    const emails = [];\r\n\r\n    var usernameRef = useRef();\r\n    var emailRef = useRef();\r\n    var phonenumberRef = useRef();\r\n    var passwordRef = useRef();\r\n    var cpasswordRef = useRef();\r\n\r\n    const credentialsValidation = yup.object().shape({\r\n        username:yup.string()\r\n        .required('Username Required')\r\n        .min(5,'Minimum Length 5')\r\n        .max(12,'Maximum Length 12'),\r\n\r\n        email:yup.string()\r\n        .required('Email Required')\r\n        .email('Invalid Email')\r\n        .notOneOf(emails,'Email Already Registered'),\r\n\r\n        password:yup.string()\r\n        .required('Password Required')\r\n        .min(5,'Minimum 5 atleast 1 capital')\r\n        .max(15,'Maximum 15')\r\n        .minUppercase(1,'1 Capital Letter'),\r\n\r\n        confirmpassword:yup.string()\r\n        .required(' Confirm Password Required')\r\n        .oneOf([yup.ref('password'),null],'password and confirm passwords is not same'),\r\n\r\n        phonenumber:yup.string()\r\n        .required('phone number rrequired')\r\n        .min(10,'Not a Valid Phone number')\r\n        .max(10,'Not a Valid Phone number')\r\n        .matches(/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,'Not a valid phonne number'),\r\n\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            username:'',\r\n            email:'',\r\n            phonenumber:'',\r\n            password:'',\r\n            confirmpassword:''\r\n        },\r\n        validationSchema:credentialsValidation,\r\n        onSubmit:registerUser\r\n    })\r\n\r\n    function registerUser(values){\r\n        console.log(\"Hey Register\",values);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Register Page</h1>\r\n            <form onSubmit={formik.handleSubmit}>\r\n            <input type=\"text\"  placeholder=\"Enter Username\" {...formik.getFieldProps('username')} required ref={usernameRef}/>    \r\n            {formik.touched.username&&formik.errors.username?<div>{formik.errors.username}</div>:null}\r\n                \r\n            <input type=\"email\"  placeholder=\"Enter Mail\" {...formik.getFieldProps('email')} required ref={emailRef}/>  \r\n            {formik.touched.email&&formik.errors.email?<div>{formik.errors.email}</div>:null}\r\n            \r\n                \r\n            <input type=\"number\"   placeholder=\"Enter Phone Numer\" {...formik.getFieldProps('phonenumber')} required ref={phonenumberRef}/>  \r\n            {formik.touched.phonenumber&&formik.errors.phonenumber?<div>{formik.errors.phonenumber}</div>:null}\r\n\r\n            <input type=\"password\"    placeholder=\"Password\" {...formik.getFieldProps('password')} ref={passwordRef}/>  \r\n            {formik.touched.password&&formik.errors.password?<div>{formik.errors.password}</div>:null}\r\n\r\n            <input type=\"password\"   placeholder=\"Confirm  Password\" {...formik.getFieldProps('confirmpassword')} required ref={cpasswordRef} />  \r\n            {formik.touched.confirmpassword&&formik.errors.confirmpassword?<div>{formik.errors.confirmpassword}</div>:null}\r\n\r\n            <button type='submit'>Register</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}